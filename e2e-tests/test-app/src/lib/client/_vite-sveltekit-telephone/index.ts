
// DO NOT MODIFY
// Auto Generated by vite-sveltekit-telephone

// Type definition for parameter info
export interface ParamInfo {
  name: string;
  type: string;
  optional: boolean;
}

// Type definition for the structure stored in functionMap
export interface FunctionDetail {
  fn: (...args: any[]) => any;
  params: ParamInfo[];
}

export const functionMap: Record<string, Record<string, FunctionDetail>> = {};

import * as m0 from "$lib/tele/e2e.telephone";
functionMap["src/lib/tele/e2e.telephone.ts"] = {
  "hello": { fn: m0.hello, params: [{"name":"name","type":"string","optional":false}] },
  "add": { fn: m0.add, params: [{"name":"a","type":"number","optional":false},{"name":"b","type":"number","optional":false}] },
  "errorFunction": { fn: m0.errorFunction, params: [] },
  "functionWithNoArgs": { fn: m0.functionWithNoArgs, params: [] },
  "functionWithOptionalArg": { fn: m0.functionWithOptionalArg, params: [{"name":"name","type":"string","optional":true}] },
};
